{"version":3,"sources":["serviceWorker.js","home/App.js","list/List.js","detail/Detail.js","index.js"],"names":["Boolean","window","location","hostname","match","App","className","type","Bmob","initialize","hei","query","Query","dataArr","List","props","state","refreshing","down","height","document","documentElement","clientHeight","data","hasMore","reqNum","this","history","push","pathname","id","prev","limit","skip","find","then","res","i","length","icon","split","text","price","setState","setTimeout","ReactDOM","findDOMNode","ptr","offsetTop","genData","damping","ref","el","style","overflow","indicator","deactivate","direction","onRefresh","columnNum","hasLine","renderItem","dataItem","padding","src","width","alt","onClick","change","React","Component","Detail","goodsID","params","banner","intro","imgHeight","loading","equalTo","Banner","paddingTop","autoplay","infinite","beforeChange","from","to","console","log","afterChange","index","map","val","key","href","display","verticalAlign","onLoad","dispatchEvent","Event","Name","Price","size","Header","title","Body","render","exact","path","component","Home","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b27b12b2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport React from 'react';\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\n//import UserInfoPage from './pages/user/UserInfoPage'\nimport './App.css';\nimport { Button, List } from 'antd-mobile';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Route exact path='/' component={Home}/>\n      <Route path='/UserInfoPage' component={UserInfoPage}/> */}\n      <Button type=\"warning\">warning</Button>\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint no-dupe-keys: 0, no-mixed-operators: 0 */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PullToRefresh, Grid } from 'antd-mobile';\nimport './List.css'\nimport Bmob from \"hydrogen-js-sdk\";\nBmob.initialize(\"57b561f7d48f3c2e\", \"191019\");\nvar query = Bmob.Query(\"wine\");\nvar dataArr = [];\nvar hei;\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      refreshing: false,\n      down: false,\n      height: document.documentElement.clientHeight,\n      data: [],\n      hasMore: true,\n      reqNum: 0\n    };\n  }\n  change(state){\n    this.props.history.push({pathname:'/list/'+ state.id})\n  }\n  genData(prev = [],reqNum=0){\n    dataArr = prev;\n    query.limit(10);\n    query.skip(10*reqNum);\n    query.find().then(res => {\n      for (let i = 0; i < res.length; i++) {\n        dataArr.push({\n          id: `${res[i]['goodsID']}`,\n          icon: res[i]['Banner'].split('||')[0],\n          text: res[i]['Name'],\n          price: `${res[i]['Price']}`\n        });\n      }\n      if(res.length<10){\n        this.setState({\n          hasMore: false\n        });\n        // document.querySelector('.am-pull-to-refresh-indicator').innerHTML = '我也是有底线的'\n        // document.querySelector('.am-pull-to-refresh-indicator').style.marginBottom = '0'\n        // document.querySelector('.am-pull-to-refresh-indicator').style.marginTop = '8px'\n        //this.refs.noMore.style.display = 'block'\n      }\n      //console.log(dataArr)\n    }).then(res=>{\n        setTimeout(() => this.setState({\n          height: hei,\n          data: dataArr,\n          refreshing: false\n        }), 0);\n    })\n  }\n\n  componentDidMount() {\n    hei = this.state.height - ReactDOM.findDOMNode(this.ptr).offsetTop;\n    this.genData();\n  }\n\n  render() {\n    return (<div>\n      \n      <PullToRefresh\n        damping={100}\n        ref={el => this.ptr = el}\n        style={{\n          height: this.state.height,\n          overflow: 'auto',\n        }}\n        indicator={this.state.down ? {} : { deactivate: '上拉可以刷新' }}\n        direction={'up'}\n        refreshing={this.state.refreshing}\n        onRefresh={() => {\n        \n          if(this.state.hasMore){\n            this.setState({\n              refreshing: true,\n              data: this.genData(this.state.data,this.state.reqNum+1)\n            });\n          }\n        \n        }}\n      \n      >\n        {/* {this.state.data.map(i => (\n          <div key={i} style={{ textAlign: 'center', padding: 20 }}>\n            {this.state.down ? 'pull down' : 'pull up'} {i}\n          </div>\n        ))} */}\n        <Grid data={this.state.data}\n          columnNum={2}\n          hasLine={false}\n          renderItem={dataItem => (\n            <div style={{ padding: '12.5px' }}>\n              <img src={dataItem.icon} style={{ width: '75%' }} alt=\"\" onClick={() => this.change({ 'id': dataItem.id })} />\n              <div className=\"name\">\n                <span>{dataItem.text}</span>\n              </div>\n              <div className=\"price\">\n                <p>价格：￥{dataItem.price}</p>\n                {/* <div className=\"buy\" onClick={() => this.change({ 'id': dataItem.id })}>了解详情</div> */}\n                {/* <div style={{ clear: 'both' }}></div> */}\n              </div>\n            </div>\n          )}\n        />\n      </PullToRefresh>\n    </div>);\n  }\n}\n\nexport default List;","import React from 'react';\n//import ReactDOM from 'react-dom';\nimport { Carousel, WingBlank, Card, WhiteSpace, Icon } from 'antd-mobile';\nimport './Detail.css';\nimport Bmob from \"hydrogen-js-sdk\";\nBmob.initialize(\"57b561f7d48f3c2e\", \"191019\");\n\nclass Detail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            goodsID: props.match.params.id,\n            data: {},\n            banner: [],\n            intro: [],\n            imgHeight: 176,\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        const query = Bmob.Query(\"wine\");\n        query.equalTo(\"goodsID\", \"==\", this.state.goodsID * 1);\n        query.find().then(res => {\n\n            const data = res[0]\n            setTimeout(() => {\n                this.setState({\n                    data: data,\n                    banner: data.Banner.split('||'),\n                    intro: data.intro.split('||'),\n                    loading: false\n                });\n            }, 100);\n        });\n\n    }\n\n    render() {\n        return (\n            <div style={{ paddingTop: '15px' }}>\n                {this.state.loading ? <div className=\"loading\"><Icon type=\"loading\" /><p className=\"text\">数据加载中...</p></div> :\n                    <div>\n                        <WingBlank>\n                            <Carousel\n                                autoplay={false}\n                                infinite\n                                beforeChange={(from, to) => console.log(`slide from ${from} to ${to}`)}\n                                afterChange={index => console.log('slide to', index)}\n                            >\n                                {this.state.banner.map(val => (\n                                    <a\n                                        key={val}\n                                        href=\"http://www.alipay.com\"\n                                        style={{ display: 'inline-block', width: '100%', height: this.state.imgHeight }}\n                                    >\n                                        <img\n                                            src={val}\n                                            alt=\"\"\n                                            style={{ width: '100%', verticalAlign: 'top' }}\n                                            onLoad={() => {\n                                                // fire window resize event to change height\n                                                window.dispatchEvent(new Event('resize'));\n                                                this.setState({ imgHeight: 'auto' });\n                                            }}\n                                        />\n                                    </a>\n                                ))}\n                            </Carousel>\n                        </WingBlank>\n                        <h3>{this.state.data.Name}</h3>\n                        <p>￥{this.state.data.Price}</p>\n                        <WingBlank size=\"lg\">\n                            <WhiteSpace size=\"lg\" />\n                            <Card>\n                                <Card.Header\n                                    title=\"商品详情\"\n                                />\n                                <Card.Body>\n                                    <div>\n                                        {this.state.intro.map(val => (\n                                            <a\n                                                key={val}\n                                                href=\"http://www.alipay.com\"\n                                                style={{ display: 'inline-block', width: '100%', height: this.state.imgHeight }}\n                                            >\n                                                <img\n                                                    src={`${val}`}\n                                                    alt=\"\"\n                                                    style={{ width: '100%', verticalAlign: 'top' }}\n                                                    onLoad={() => {\n                                                        // fire window resize event to change height\n                                                        window.dispatchEvent(new Event('resize'));\n                                                        this.setState({ imgHeight: 'auto' });\n                                                    }}\n                                                />\n                                            </a>\n                                        ))}\n                                    </div>\n                                </Card.Body>\n\n                            </Card>\n                            <WhiteSpace size=\"lg\" />\n                        </WingBlank>\n                    </div>\n                }\n\n\n            </div>\n        )\n    }\n}\n\nexport default Detail;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'amfe-flexible';\n//import App from './home/App';\nimport * as serviceWorker from './serviceWorker';\n// 路由使用 history模式\nimport { HashRouter,Route } from 'react-router-dom';\n// 路由采用 hash模式\n// import { HashRouter } from 'react-router-dom'\nimport Home from './home/App'\nimport List from './list/List'\nimport Detail from './detail/Detail'\n\nReactDOM.render(\n  <HashRouter>\n    <Route exact path='/' component={Home}/>\n    <Route exact path='/list' component={List}/>\n    <Route exact path='/list/:id' component={Detail}/>\n  </HashRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}